plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'com.example'
version '0.1.0-RELEASE'

repositories {
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    maven{ url 'https://maven.aliyun.com/nexus/content/repositories/jcenter'}
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
    springVersion = '5.3.21'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.fastcopywin'
    mainClass = 'com.example.fastcopywin.Main'
}

javafx {
    version = '11.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.3.2') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.0')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation('eu.hansolo:tilesfx:11.48') {
        exclude(group: 'org.openjfx')
    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    /* 支持全局监听键盘 & 鼠标包 */
    implementation('com.github.kwhat:jnativehook:2.2.2')
    /* spring 核心模块 */
    implementation("org.springframework:spring-context:${springVersion}")
    implementation("org.springframework:spring-core:${springVersion}")
    implementation("org.springframework:spring-beans:${springVersion}")
    /* 简单场景下 orm 映射框架 */
    implementation('org.springframework.data:spring-data-jdbc:2.4.0')
    /* apache 工具包 */
    implementation("org.apache.commons:commons-lang3:3.12.0")
    /* h2 内存数据库 */
    implementation("com.h2database:h2:2.1.214")
}

test {
    useJUnitPlatform()
}

task testPrint {
    println("hello world 你好")
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

jar {
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'

    manifest {
        attributes("Main-Class": "com.example.fastcopywin.Main", "Implementation-Title": "Gradle")
    }
}